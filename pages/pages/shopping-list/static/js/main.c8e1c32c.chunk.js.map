{"version":3,"sources":["App.js","index.js"],"names":["Item","item","index","completeItem","removeItem","style","isChecked","color","textDecoration","className","onClick","title","icon","faTrash","ItemForm","addItem","useState","value","setValue","onSubmit","e","preventDefault","type","placeholder","onChange","target","App","items","setItems","newItems","splice","map","key","ReactDOM","render","document","getElementById"],"mappings":"yQAKA,SAASA,EAAT,GAA0D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAYzC,OAAO,yBAAKC,MAAOJ,EAAKK,UAVH,CACnBC,MAAO,OACPC,eAAgB,gBAGM,CACtBD,MAAO,OACPC,eAAgB,QAIlBC,UAAU,QACR,yBAAKA,UAAU,QAAQC,QAAS,kBAAMP,EAAaD,KAEhDD,EAAKU,OAER,yBAAKF,UAAU,OACb,4BAAQA,UAAU,QAAQC,QAAS,kBAAMN,EAAWF,KAClD,kBAAC,IAAD,CAAiBU,KAAMC,SAM/B,SAASC,EAAT,GAA6B,IAAVC,EAAS,EAATA,QAAS,EACAC,mBAAS,IADT,mBACnBC,EADmB,KACZC,EADY,KAU1B,OACE,0BAAMC,SARa,SAAAC,GACnBA,EAAEC,iBACGJ,IACLF,EAAQE,GACRC,EAAS,OAKP,2BAAOI,KAAK,OAAOb,UAAU,QAAQc,YAAY,eAAeN,MAAOA,EAAOO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,WAmDtGS,MA9Cf,WAAgB,IAAD,EAEaV,mBAAS,IAFtB,mBAENW,EAFM,KAECC,EAFD,KAsBPzB,EAAe,SAAAD,GACnB,IAAM2B,EAAQ,YAAOF,GACrBE,EAAS3B,GAAOI,WAAauB,EAAS3B,GAAOI,UAC7CsB,EAASC,IAGLzB,EAAa,SAAAF,GACjB,IAAM2B,EAAQ,YAAOF,GACrBE,EAASC,OAAO5B,EAAO,GACvB0B,EAASC,IAGX,OACE,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,aACb,kBAACK,EAAD,CAAUC,QApBA,SAAAJ,GACd,IAAMkB,EAAQ,sBAAOF,GAAP,CAAc,CAAEhB,WAC9BiB,EAASC,MAmBJF,EAAMI,KAAI,SAAC9B,EAAMC,GAAP,OACT,kBAACF,EAAD,CAAMgC,IAAK9B,EAAOA,MAAOA,EAAOD,KAAMA,EAAME,aAAcA,EAAcC,WAAYA,UCnF9F6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c8e1c32c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport './App.css';\n\nfunction Item({ item, index, completeItem, removeItem }) {\n\n  const styleChecked = {\n    color: '#888',\n    textDecoration: 'line-through'\n  }\n\n  const styleNonChecked = {\n    color: '#000',\n    textDecoration: 'none'\n  }\n\n  return <div style={item.isChecked ? styleChecked : styleNonChecked} \n  className=\"item\">\n    <div className=\"title\" onClick={() => completeItem(index)}>\n      {/* <input type=\"checkbox\" onClick={() => completeItem(index)}></input> */}\n      {item.title}\n    </div>\n    <div className=\"btn\">\n      <button className=\"trash\" onClick={() => removeItem(index)}>\n        <FontAwesomeIcon icon={faTrash} />\n      </button>\n    </div>\n  </div>;\n}\n\nfunction ItemForm({addItem}){\n  const [value, setValue] = useState('')\n\n  const handleSubmit = e => {\n    e.preventDefault()\n    if (!value) return\n    addItem(value)\n    setValue('')\n  }\n\n  return(\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" className=\"input\" placeholder=\"Add item ...\" value={value} onChange={e => setValue(e.target.value)}></input>\n    </form>\n  )\n}\n\nfunction App() {\n\n  const [items, setItems] = useState([\n    // {\n    //   title: 'Milk',\n    //   isChecked: false\n    // },\n    // {\n    //   title: 'Cheese',\n    //   isChecked: false\n    // },\n    // {\n    //   title: 'Chicken',\n    //   isChecked: false\n    // }\n  ])\n\n  const addItem = title => {\n    const newItems = [...items, { title }]\n    setItems(newItems)\n  }\n\n  const completeItem = index => {\n    const newItems = [...items]\n    newItems[index].isChecked = !newItems[index].isChecked\n    setItems(newItems)\n  }\n\n  const removeItem = index => {\n    const newItems = [...items]\n    newItems.splice(index, 1)\n    setItems(newItems)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"item-list\">\n        <ItemForm addItem={addItem} />\n        {items.map((item, index) => (\n          <Item key={index} index={index} item={item} completeItem={completeItem} removeItem={removeItem} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}